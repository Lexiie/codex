name: Build Codex for Android (HTTP/1.1 + rustls)

on:
  workflow_dispatch: {}

concurrency:
  group: android-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
      RUSTFLAGS: "-C debuginfo=0"

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain (Android)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android

      - name: Setup Android NDK (bionic)
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d

      - name: Configure Android linker
        run: |
          echo "CC_aarch64_linux_android=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV
          echo "CXX_aarch64_linux_android=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang++" >> $GITHUB_ENV
          echo "AR_aarch64_linux_android=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_LINUX_ANDROID_LINKER=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang" >> $GITHUB_ENV

      # ---- PATCH 1: paksa semua reqwest â†’ rustls (hindari OpenSSL) ----
      - name: Force reqwest to use rustls (workspace-wide)
        working-directory: codex-rs
        run: |
          set -euxo pipefail

          # 1) Ubah workspace dependency reqwest jadi rustls
          #    (default-features=false agar native-tls/openssl tidak ikut)
          if grep -q '^\[workspace.dependencies\]' Cargo.toml; then
            # Hilangkan baris reqwest lama di workspace.dependencies (kalau ada)
            sed -i -E '/^\[workspace.dependencies\]/,/^\[/ s/^reqwest\s*=.*/reqwest = { version = "0.12", default-features = false, features = ["json","stream","rustls-tls"] }/' Cargo.toml
            # Kalau belum ketemu baris reqwest sama sekali, sisipkan setelah header workspace.dependencies
            if ! grep -qE '^\s*reqwest\s*=\s*\{' Cargo.toml; then
              awk '
                BEGIN { injected=0 }
                /^\[workspace.dependencies\]/ && injected==0 { print; print "reqwest = { version = \"0.12\", default-features = false, features = [\"json\",\"stream\",\"rustls-tls\"] }"; injected=1; next }
                { print }
              ' Cargo.toml > Cargo.toml.p && mv Cargo.toml.p Cargo.toml
            fi
          fi

          # 2) Tambal Cargo.toml lain yang masih refer ke reqwest tanpa rustls
          #    (tanpa merusak yang sudah set rustls)
          find . -name Cargo.toml -maxdepth 2 -type f | while read -r f; do
            # skip workspace root karena sudah dipatch
            [ "$f" = "./Cargo.toml" ] && continue
            # kalau ada baris reqwest workspace=true TANPA rustls, tambahkan fitur rustls-tls
            if grep -qE 'reqwest\s*=\s*\{\s*workspace\s*=\s*true' "$f" && ! grep -q 'rustls-tls' "$f"; then
              sed -i -E 's/reqwest\s*=\s*\{\s*workspace\s*=\s*true\s*(,[^}]*)?\}/reqwest = { workspace = true, features = ["json","stream","rustls-tls"] }/' "$f" || true
            fi
            # kalau ada reqwest = "0.12" tanpa rustls, ubah ke default-features=false + rustls
            if grep -qE 'reqwest\s*=\s*"0\.12"' "$f" && ! grep -q 'rustls-tls' "$f"; then
              sed -i -E 's/reqwest\s*=\s*"0\.12"/reqwest = { version = "0.12", default-features = false, features = ["json","stream","rustls-tls"] }/' "$f" || true
            fi
          done

          echo "== grep reqwest after patch =="
          rg -n "reqwest" || true

      # ---- PATCH 2 (opsional): paksa HTTP/1.1 biar nggak stream error ----
      - name: Force HTTP/1.1 (disable H2) [optional]
        working-directory: codex-rs
        run: |
          set -euxo pipefail
          sed -i -E 's#reqwest::Client::builder\(\)\s*\.\s*build\(\)#reqwest::Client::builder().http1_only(true).build()#g' backend-client/src/client.rs || true
          sed -i -E 's#reqwest::Client::builder\(\)\s*\.\s*build\(\)#reqwest::Client::builder().http1_only(true).build()#g' cloud-tasks/src/env_detect.rs || true
          sed -i -E 's#(let\s+mut\s+builder\s*=\s*reqwest::Client::builder\(\))\s*;#\1.http1_only(true);#' core/src/default_client.rs || true
          sed -i -E 's#Client::builder\(\)#Client::builder().http1_only(true)#g' responses-api-proxy/src/lib.rs || true

      # ---- BUILD: hanya crate CLI (binary `codex`) dari dalam codex-rs/ ----
      - name: Build codex CLI (Android)
        working-directory: codex-rs
        run: |
          rustup target add aarch64-linux-android
          cargo build --release -p codex-cli --target aarch64-linux-android 2>&1 | tee ../build-android.log
          echo "== target output =="
          ls -lah target/aarch64-linux-android/release || true

      - name: Upload build log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-android-log
          path: build-android.log

      - name: Upload codex binary (exact)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: codex-android-http1
          path: codex-rs/target/aarch64-linux-android/release/codex

      - name: Upload codex binary (fallback glob)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: codex-android-http1-glob
          path: |
            codex-rs/target/aarch64-linux-android/release/codex*
            !**/*.d
            !**/*.rlib
            !**/*.rmeta
            !**/*.so
